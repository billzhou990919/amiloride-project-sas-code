data cms.all_mbsf;
    set cms.mbsf2014 cms.mbsf2015 cms.mbsf2016 cms.mbsf2017 cms.mbsf2018 cms.mbsf2019;
    keep bene_id bene_enrollmt_ref_yr 
         mdcr_entlmt_buyin_ind_01-mdcr_entlmt_buyin_ind_12 
         hmo_ind_01-hmo_ind_12 
         ptc_pbp_id_01-ptc_pbp_id_12 
         ptd_cntrct_id_01-ptd_cntrct_id_12;
run;


/*part a and b*/
proc sql;
    create table cms.day0_month_year as
    select distinct bene_id, month(index_date) as month_day0, year(index_date) as year_day0
    from cms.nopriorpd;
Quit;
proc sort data=cms.all_mbsf;
    by bene_id bene_enrollmt_ref_yr;
run;

proc sort data=cms.day0_month_year;
    by bene_id;
Run;
data cms.merge_data;
    merge cms.all_mbsf (in=a)
          cms.day0_month_year (in=b);
    by bene_id;
    if b;
Run;

data cms.temp_continuous;
    set cms.merge_data;
    by bene_id;

    array mdcr_entlmt[12] mdcr_entlmt_buyin_ind_01-mdcr_entlmt_buyin_ind_12;
    array hmo[12] hmo_ind_01-hmo_ind_12;
    array ptc_pbp[12] ptc_pbp_id_01-ptc_pbp_id_12;
    array ptd_cntrct[12] ptd_cntrct_id_01-ptd_cntrct_id_12;
    retain continuous 1;

    if first.bene_id then do;
        continuous = 1;
        year_diff = year_day0 - bene_enrollmt_ref_yr;

        if year_diff = 0 then do;
            do i = 1 to month_day0;
                if (mdcr_entlmt[i] not in ('3', 'C')) then do;

                    continuous = 0;
                    leave;
                end;
            end;
        end;

        if year_diff = 1 then do;
            do i = month_day0 + 1 to 12;
               if (mdcr_entlmt[i] not in ('3', 'C')) then do;
                    continuous = 0;
                    leave;
                end;
            end;
        end;
    end;

    if last.bene_id and continuous = 1;
run;

proc sql;
    create table cms.final_continuous_enrollment as
    select distinct bene_id
    from cms.temp_continuous;
Quit;

proc datasets library=cms nolist;
    delete day0_month_year merge_data temp_continuous;
quit;



proc sql;
    create table cms.continuous_enrollment_ab as
    select a.*
    from cms.nopriorpd as a
    inner join cms.final_continuous_enrollment as b
    on a.bene_id = b.bene_id;
quit;






/*no hmo*/
proc sql;
    create table cms.day0_month_year as
    select distinct bene_id, month(index_date) as month_day0, year(index_date) as year_day0
    from cms.continuous_enrollment_ab;
Quit;
proc sort data=cms.all_mbsf;
    by bene_id bene_enrollmt_ref_yr;
run;

proc sort data=cms.day0_month_year;
    by bene_id;
Run;
data cms.merge_data;
    merge cms.all_mbsf (in=a)
          cms.day0_month_year (in=b);
    by bene_id;
    if b;
Run;

data cms.temp_continuous;
    set cms.merge_data;
    by bene_id;

    array mdcr_entlmt[12] mdcr_entlmt_buyin_ind_01-mdcr_entlmt_buyin_ind_12;
    array hmo[12] hmo_ind_01-hmo_ind_12;
    array ptc_pbp[12] ptc_pbp_id_01-ptc_pbp_id_12;
    array ptd_cntrct[12] ptd_cntrct_id_01-ptd_cntrct_id_12;
    retain continuous 1;

    if first.bene_id then do;
        continuous = 1;
        year_diff = year_day0 - bene_enrollmt_ref_yr;

        if year_diff = 0 then do;
            do i = 1 to month_day0;
                if put(hmo[i],1.) ^= "0"  then do;

                    continuous = 0;
                    leave;
                end;
            end;
        end;

        if year_diff = 1 then do;
            do i = month_day0 + 1 to 12;
               if put(hmo[i],1.) ^= "0" then do;
                    continuous = 0;
                    leave;
                end;
            end;
        end;
    end;

    if last.bene_id and continuous = 1;
run;

proc sql;
    create table cms.final_continuous_enrollment as
    select distinct bene_id
    from cms.temp_continuous;
Quit;

proc datasets library=cms nolist;
    delete day0_month_year merge_data temp_continuous;
quit;

proc sql;
    create table cms.continuous_enrollment_nohmo as
    select a.*
    from cms.continuous_enrollment_ab as a
    inner join cms.final_continuous_enrollment as b
    on a.bene_id = b.bene_id;
quit;




/*not enrolled in part c*/
proc sql;
    create table cms.day0_month_year as
    select distinct bene_id, month(index_date) as month_day0, year(index_date) as year_day0
    from cms.continuous_enrollment_nohmo;
Quit;
proc sort data=cms.all_mbsf;
    by bene_id bene_enrollmt_ref_yr;
run;

proc sort data=cms.day0_month_year;
    by bene_id;
Run;
data cms.merge_data;
    merge cms.all_mbsf (in=a)
          cms.day0_month_year (in=b);
    by bene_id;
    if b;
Run;

data cms.temp_continuous;
    set cms.merge_data;
    by bene_id;

    array mdcr_entlmt[12] mdcr_entlmt_buyin_ind_01-mdcr_entlmt_buyin_ind_12;
    array hmo[12] hmo_ind_01-hmo_ind_12;
    array ptc_pbp[12] ptc_pbp_id_01-ptc_pbp_id_12;
    array ptd_cntrct[12] ptd_cntrct_id_01-ptd_cntrct_id_12;
    retain continuous 1;

    if first.bene_id then do;
        continuous = 1;
        year_diff = year_day0 - bene_enrollmt_ref_yr;

        if year_diff = 0 then do;
            do i = 1 to month_day0;
                if not missing(ptc_pbp[i]) then do;

                    continuous = 0;
                    leave;
                end;
            end;
        end;

        if year_diff = 1 then do;
            do i = month_day0 + 1 to 12;
               if not missing(ptc_pbp[i]) then do;
                    continuous = 0;
                    leave;
                end;
            end;
        end;
    end;

    if last.bene_id and continuous = 1;
run;

proc sql;
    create table cms.final_continuous_enrollment as
    select distinct bene_id
    from cms.temp_continuous;
Quit;

proc datasets library=cms nolist;
    delete day0_month_year merge_data temp_continuous;
quit;

proc sql;
    create table cms.continuous_enrollment_nopartc as
    select a.*
    from cms.continuous_enrollment_nohmo as a
    inner join cms.final_continuous_enrollment as b
    on a.bene_id = b.bene_id;
quit;



/*part d*/
proc sql;
    create table cms.day0_month_year as
    select distinct bene_id, month(index_date) as month_day0, year(index_date) as year_day0
    from cms.continuous_enrollment_nopartc;
Quit;
proc sort data=cms.all_mbsf;
    by bene_id bene_enrollmt_ref_yr;
run;

proc sort data=cms.day0_month_year;
    by bene_id;
Run;
data cms.merge_data;
    merge cms.all_mbsf (in=a)
          cms.day0_month_year (in=b);
    by bene_id;
    if b;
Run;

data cms.temp_continuous;
    set cms.merge_data;
    by bene_id;

    array mdcr_entlmt[12] mdcr_entlmt_buyin_ind_01-mdcr_entlmt_buyin_ind_12;
    array hmo[12] hmo_ind_01-hmo_ind_12;
    array ptc_pbp[12] ptc_pbp_id_01-ptc_pbp_id_12;
    array ptd_cntrct[12] ptd_cntrct_id_01-ptd_cntrct_id_12;
    retain continuous 1;

    if first.bene_id then do;
        continuous = 1;
        year_diff = year_day0 - bene_enrollmt_ref_yr;

        if year_diff = 0 then do;
            do i = 1 to month_day0;
                if not (substr(ptd_cntrct[i], 1, 1) in ('H', 'R', 'S', 'E'))  then do;

                    continuous = 0;
                    leave;
                end;
            end;
        end;

        if year_diff = 1 then do;
            do i = month_day0 + 1 to 12;
               if not (substr(ptd_cntrct[i], 1, 1) in ('H', 'R', 'S', 'E'))  then do;
                    continuous = 0;
                    leave;
                end;
            end;
        end;
    end;

    if last.bene_id and continuous = 1;
run;

proc sql;
    create table cms.final_continuous_enrollment as
    select distinct bene_id
    from cms.temp_continuous;
Quit;

proc datasets library=cms nolist;
    delete day0_month_year merge_data temp_continuous;
quit;

proc sql;
    create table cms.continuous_enrollment_partd as
    select a.*
    from cms.continuous_enrollment_nopartc as a
    inner join cms.final_continuous_enrollment as b
    on a.bene_id = b.bene_id;
quit;




//////////////////////////////////////////////////////////////////////////////
proc sort data=cms.nopriorpd out=cms.no_prior_pd_unique nodupkey;
    by bene_id;
run;

/* Keep only the bene_id column */
data cms.no_prior_pd_unique;
    set cms.no_prior_pd_unique(keep=bene_id index_date);
run;


%macro enroll (yr = );
	Data enroll_&yr;
		merge cms.mbsf&yr.(keep=bene_id mdcr_entlmt_buyin_ind_01-mdcr_entlmt_buyin_ind_12 ptd_cntrct_id_01-ptd_cntrct_id_12 hmo_ind_01-hmo_ind_12) 
			  cms.no_prior_pd_unique(in=in2 keep=bene_id); 
		by bene_id;
		rename mdcr_entlmt_buyin_ind_01-mdcr_entlmt_buyin_ind_12 = mdcr_entlmt_buyin_ind_&yr._01-mdcr_entlmt_buyin_ind_&yr._12
			   ptd_cntrct_id_01-ptd_cntrct_id_12 = ptd_cntrct_id_&yr._01-ptd_cntrct_id_&yr._12
			   hmo_ind_01-hmo_ind_12 = hmo_ind_&yr._01-hmo_ind_&yr._12;
		if in2;
	run;

%mend enroll;
%enroll (yr = 2015);
%enroll (yr = 2016);
%enroll (yr = 2017);
%enroll (yr = 2018);
%enroll (yr = 2019);
proc sort data=enroll_2015 out=enroll_nodup_15 nodup; by bene_id; run;
proc sort data=enroll_2016 out=enroll_nodup_16 nodup; by bene_id; run;
proc sort data=enroll_2017 out=enroll_nodup_17 nodup; by bene_id; run;
proc sort data=enroll_2018 out=enroll_nodup_18 nodup; by bene_id; run;
proc sort data=enroll_2019 out=enroll_nodup_19 nodup; by bene_id; run;


proc sql;	
	create table enroll as 
	select a.*, b.*, c.*, d.*, e.*
	from enroll_nodup_15 as a , enroll_nodup_16 as b, enroll_nodup_17 as c , enroll_nodup_18 as d , enroll_nodup_19 as e
	where a.bene_id = b.bene_id = c.bene_id = d.bene_id = e.bene_id
	order by bene_id;
quit;

data enroll_pt;
	merge cms.no_prior_pd_unique enroll;
	by bene_id;
run;


**Part A B D and no HMO enrollment;
data cms.continuous_enrollment_amiloride;				* 57,093;
	set enroll_pt;

	Diag_index = (year(index_date)-2015)*12 + month(index_date);
	start_mon= Diag_index-6;

	* Part AB;
	ARRAY AB{60} $ mdcr_entlmt_buyin_ind_2015_01 - mdcr_entlmt_buyin_ind_2015_12
				   mdcr_entlmt_buyin_ind_2016_01 - mdcr_entlmt_buyin_ind_2016_12
				   mdcr_entlmt_buyin_ind_2017_01 - mdcr_entlmt_buyin_ind_2017_12
				   mdcr_entlmt_buyin_ind_2018_01 - mdcr_entlmt_buyin_ind_2018_12
				   mdcr_entlmt_buyin_ind_2019_01 - mdcr_entlmt_buyin_ind_2019_12								;

	ABflag = 0;
	DO  i = start_mon TO Diag_index;
		IF AB{i} in ('3','C') THEN ABflag=ABflag+1; 
		END;
	if ABflag=7; 

	* Part D;
	ARRAY cd{60} $ ptd_cntrct_id_2015_01 - ptd_cntrct_id_2015_12
				   ptd_cntrct_id_2016_01 - ptd_cntrct_id_2016_12
				   ptd_cntrct_id_2017_01 - ptd_cntrct_id_2017_12
				   ptd_cntrct_id_2018_01 - ptd_cntrct_id_2018_12
                                   ptd_cntrct_id_2019_01 - ptd_cntrct_id_2019_12;

	Dflag = 0;
	DO  i = start_mon TO Diag_index;
		IF (substr(cd(i),1,1) in ('H','R','S','E') or substr(cd(i),1,2)='X0') THEN Dflag=Dflag+1; 
	END;

	if Dflag=7;

	* no HMO;
	ARRAY hmo{60} $ hmo_ind_2015_01-hmo_ind_2015_12
				    hmo_ind_2016_01-hmo_ind_2016_12
				    hmo_ind_2017_01-hmo_ind_2017_12
				    hmo_ind_2018_01-hmo_ind_2018_12
				    hmo_ind_2019_01-hmo_ind_2019_12;

	hmoflag = 0;
	DO  i = start_mon TO Diag_index;
		IF hmo{i} in ('0') THEN hmoflag=hmoflag+1;  
	END;

	if hmoflag=7;

	drop mdcr_entlmt_buyin_ind_2015_01 - mdcr_entlmt_buyin_ind_2015_12
		 mdcr_entlmt_buyin_ind_2016_01 - mdcr_entlmt_buyin_ind_2016_12
		 mdcr_entlmt_buyin_ind_2017_01 - mdcr_entlmt_buyin_ind_2017_12
		 mdcr_entlmt_buyin_ind_2018_01 - mdcr_entlmt_buyin_ind_2018_12 mdcr_entlmt_buyin_ind_2019_01 - mdcr_entlmt_buyin_ind_2019_12
		 ptd_cntrct_id_2015_01 - ptd_cntrct_id_2015_12
		 ptd_cntrct_id_2016_01 - ptd_cntrct_id_2016_12
		 ptd_cntrct_id_2017_01 - ptd_cntrct_id_2017_12
	 	 ptd_cntrct_id_2018_01 - ptd_cntrct_id_2018_12 ptd_cntrct_id_2019_01 - ptd_cntrct_id_2019_12
		 hmo_ind_2015_01-hmo_ind_2015_12
		 hmo_ind_2016_01-hmo_ind_2016_12
		 hmo_ind_2017_01-hmo_ind_2017_12
		 hmo_ind_2018_01-hmo_ind_2018_12 hmo_ind_2019_01-hmo_ind_2019_12
		 Diag_index start_mon ABflag Dflag hmoflag i;
run;





















