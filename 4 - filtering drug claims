proc sort data=cms.mbsf out=cms.mbsfv2 nodupkey;
    by bene_id;
run;

proc sort data=cms.all_drug_claims;
    by bene_id;
run;
/*add birth date from mbsf to drug claims file*/
data cms.all_drug_claimsv2;
    merge cms.all_drug_claims(in=a) cms.mbsfv2(in=b);
    by bene_id;
    birth_date = bene_birth_dt;
    if a;  
Run;



data cms.all_drug_claimsv3;
    set cms.all_drug_claimsv2;
    where sample_group ne ' ';
run;
/*getting all drug claims from 2016 - 2019*/
data cms.all_drug_claimsv4;
    set cms.all_drug_claimsv3;
    where srvc_dt >= '01JAN2016'd;
run;

/*amiloride or other diuretics indicator*/
Data cms.all_drug_claimsv4;
Set cms.all_drug_claimsv4;
If (upcase(bn) in: ('AMILORIDE', 'MIDAMOR') or upcase(gnn) in: ('AMILORIDE', 'MIDAMOR')) then amiloride = 1;
If (upcase(bn) in: ('EPLERENONE', 'INSPRA', ‘SPIRONOLACTONE’, ‘ALDACTONE’, ‘CAROSPIR’, ‘TRIAMTERENE’, ‘DYRENIUM’) or upcase(gnn) in: ('EPLERENONE', 'INSPRA', ‘SPIRONOLACTONE’, ‘ALDACTONE’, ‘CAROSPIR’, ‘TRIAMTERENE’, ‘DYRENIUM’)) then amiloride = 0;
Run;

/*only keeping the first drug period of each user, adding switching indicator*/
proc sort data=cms.all_drug_claimsv4;
   by bene_id srvc_dt;
run;

data cms.all_drug_claimsv5;
   set cms.all_drug_claimsv4;
   by bene_id;


   retain prev_drug change_start change_flag;

   /* Initialize for the first row of each enrolid */
   if first.bene_id then do;
      prev_drug = amiloride;
      change_start = .; /* Reset change_start for each new enrolid */
      change_flag = 0; /* Reset change_flag for each new enrolid */
   end;

   /* Detect the first change in combination */
   else if amiloride ne prev_drug and change_flag = 0 then do;
      change_start = srvc_dt; /* Record the overlap_start at first change */
      change_flag = 1; /* Set the flag so no further changes are recorded */
   end;

   /* Update the prev_comb for the next iteration */
   prev_drug = amiloride;

 
   if last.bene_id and change_flag then change_detected = 1;
   else change_detected = 0;

   drop prev_drug change_flag;
run;

/*create a list of unique bene_id with switching date and indicator*/
data cms.unique_drug_user_switching;
   set cms.all_drug_claimsv5;
   by bene_id;

   if last.bene_id then output;
run;

/*only keeping the first drug period*/
data cms.all_drug_claims_first_period;
    set cms.all_drug_claimsv5;
    by bene_id;
    if change_start = . then output;
run;

/*deleting those with only one claims of amilordie or other diuretics*/
proc sql;
    create table cms.multiple_rows as
    select bene_id
    from cms.all_drug_claims_first_period
    group by bene_id
    having count(bene_id) > 1;
quit;


data cms.more_than_one_claims;
    merge cms.all_drug_claims_first_period(in=a) cms.multiple_rows(in=b);
    by bene_id;
    if a and b;
run;


proc datasets library=cms nolist;
    delete multiple_rows;
run;
Quit;

